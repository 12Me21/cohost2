:host {
}
/* rgb(37,99,23) #ebad25*/
/* 🟥 */
*, ::before, ::after {
	box-sizing: border-box;
	/* default is: medium none currentColor; */
	border: 0 solid currentColor;
	
	scrollbar-color: initial; /* this is inherited for some reason? */
}

.read-more {
	text-decoration: none;
	color: var(--color-foreground);
	font-weight: 700;
	font-size: .875rem;
	line-height: 1.25rem;
	margin-bottom: .75rem;
	background-color: var(--color-white);
	cursor: pointer;
	display: block;
	box-sizing: border-box;
	cursor: pointer;
	margin: 0 1rem 0.75rem;
}
.read-more:not([data-open]) {
	border-top: 2px dotted;	
}
.read-more:hover {
	text-decoration: underline;
}

img, svg, video, canvas, audio, iframe, embed, object {
	display: block;
	vertical-align: middle;
}
img, video {
	max-width: 100%;
	height: auto;
}

code, kbd, samp, pre {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, liberation mono, courier new, monospace;
}

/* <input> gets converted to <input type=checkbox disabled> */
button, input, optgroup, select, textarea {
	font-family: inherit;
	font-size: 100%;
	line-height: inherit;
	color: inherit;
	margin: 0;
	padding: 0;
}
[type=checkbox] {
	appearance: none;
	padding: 0;
	-webkit-print-color-adjust: exact; color-adjust: exact;
	display: inline-block;
	vertical-align: middle;
	background-origin: border-box;
	-webkit-user-select: none; user-select: none;
	flex-shrink: 0;
	height: 1rem;
	width: 1rem;
	border-color: var(--color-gray500);
	border-width: 1px;
	border-radius: 0;
	background-color: var(--color-notWhite);
	color: var(--color-foreground);
}
[type=checkbox]:checked, [type=checkbox]:indeterminate {
	border-color: transparent;
	background-color: currentColor;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;
}
[type=checkbox]:checked {
	background-image: url('data:image/svg+xml,<svg viewBox="0 0,16 16" xmlns="http://www.w3.org/2000/svg"><path stroke="white" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="m 4.5 8.5, 2 2, 5 -5"/></svg>');
}
[type=checkbox]:indeterminate {
	background-image: url("data:image/svg+xml,<svg viewBox='0 0,16 16' xmlns='http://www.w3.org/2000/svg'><path stroke='white' fill='none' stroke-linecap='round' stroke-width='2' d='M 4 8 h 8'/></svg>");
}
input[type=checkbox]:disabled {
	cursor: not-allowed;
	color: var(--color-cherry300);
}

*:focus {
	outline-style: solid;
	outline-width: 4px;
	outline-color: var(--color-foreground);
	--tw-ring-color: var(--color-foreground) !important;
}
/* duplicate for compat reasons */
*:focus-visible {
	outline-style: solid;
	outline-width: 4px;
	outline-color: var(--color-foreground);
	--tw-ring-color: var(--color-foreground); !important
}
*:focus:not(:focus-visible) {
	outline: 2px solid transparent;
	outline-offset: 2px;
}


/* these are generated by things like mentions */
.\!font-bold {
	font-weight: bold;
}
.\!no-underline {
	text-decoration: none;
}
.hover\:\!underline:hover {
	text-decoration: underline;
}

/*
the default image sizes/spacing are WAYYY too big,
but we can't mess with it too much, otherwise it could break things.
so, we just target unstyled images, at the top level or directly inside
a paragraph
*/
:host > div > img:not([style]),
p > img:not([style]) {
	max-height: var(--embed-height);
	margin: 1em 0;
	border: var(--image-border);
}

:host > div {
	background: white;
	
	margin: var(--prose-margin, 1rem);
	margin-left: 0;
	margin-right: 0;
	
	border-width: var(--prose-margin, 1rem);
	border-style: none solid;
	border-color: transparent;
}
:host {
	--tw-prose-headings: rgb(17, 24, 39);
	--tw-prose-links: rgb(17, 24, 39);
	--tw-prose-bold: rgb(17, 24, 39);
	--tw-prose-quotes: rgb(17, 24, 39);
	--tw-prose-code: rgb(17, 24, 39);
	
	--tw-prose-pre-bg: rgb(31, 41, 55);
	
	--tw-prose-body: rgb(55, 65, 81);
	
	--tw-prose-lead: rgb(75, 85, 99);
	
	--tw-prose-counters: rgb(107,114,128);
	--tw-prose-captions: rgb(107,114,128);
	
	--tw-prose-bullets: rgb(209,213,219);
	--tw-prose-th-borders: rgb(209,213,219);
	
	--tw-prose-hr: rgb(229,231,235);
	--tw-prose-quote-borders: rgb(229,231,235);
	--tw-prose-pre-code: rgb(229,231,235);
	--tw-prose-td-borders: rgb(229,231,235);
	
	--color-cherry:    rgb(131, 37, 79);
	--color-cherry300: rgb(211,116,155);
	--color-gray500:   rgb(130,127,124);
	--color-blue:      rgb( 37, 99,235); /* not sure name of */
	--color-notBlack:  rgb( 25, 25, 25);
	--color-notWhite:  rgb(255,249,242);
	--color-white:     rgb(255,255,255);
	
	--color-foreground: var(--color-cherry);
	
	background: white;
	box-sizing: content-box;
	max-width: 65ch;
	
	contain: content;
	word-break: break-word;
	-webkit-text-size-adjust: 100%;
	-moz-tab-size: 4; tab-size: 4;
	color: var(--color-notBlack);
	font:
		1rem / 1.75
		'Atkinson Hyperlegible', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'segoe ui', 'Roboto', 'helvetica neue', 'Arial', 'noto sans', 'sans-serif',
		'apple color emoji', 'segoe ui emoji', 'segoe ui symbol', 'noto color emoji';
}

a {
	color: inherit;
	text-decoration: underline;
	font-weight: 500;
}
:where(.lead) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin: 1.2em 0;
}
/* bold */
:where(strong) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}
:where(ol) {
	padding-left: 1.625em;
}
ol { list-style-type: decimal; }
ol[type=A]  { list-style-type: upper-alpha; }
ol[type=a]  { list-style-type: lower-alpha; }
ol[type=As] { list-style-type: upper-alpha; }
ol[type=as] { list-style-type: lower-alpha; }
ol[type=I]  { list-style-type: upper-roman; }
ol[type=i]  { list-style-type: lower-roman; }
ol[type=Is] { list-style-type: upper-roman; }
ol[type=is] { list-style-type: lower-roman; }
ol[type='1']  { list-style-type: decimal; }
ul { list-style-type: disc; }

:where(ul) {
	padding-left: 1.625em;
}
:where(ol > li)::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}
:where(ul > li)::marker {
	color: var(--tw-prose-bullets);
}
:where(hr) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin: 1em 0;
}
:where(blockquote) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left: 0.25rem solid var(--tw-prose-quote-borders);
	quotes: "“" "”" "‘" "’";
	margin: 1.6em 0;
	padding-left: 1em
}
:where(blockquote p:first-of-type)::before {
	content: open-quote;
}
:where(blockquote p:last-of-type)::after {
	content: close-quote;
}
:where(h1) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin: 0 0 0.89em;
	line-height: 1.11;
}
:where(h1 strong) {
	font-weight: 900;
}
:where(h2) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin: 2em 0 1em;
	line-height: 1.33;
}
:where(h2 strong) {
	font-weight: 800;
}
:where(h3) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin: 1.6em 0 0.6em;
	line-height: 1.6;
}
:where(h3 strong) {
	font-weight: 700;
}
:where(h4) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin: 1.5em 0 0.5em;
	line-height: 1.5;
}
:where(h4 strong) {
	font-weight: 700;
}
/* 🟥 */
:where(figure > *) {
	margin: 0;
}
figcaption {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.43; /* 10/7 */
	margin-top: 0.86em; /* 6/7 */
}

pre {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: .875em;
	line-height: 1.71;
	margin: 1.71em;
	border-radius: 0.375rem;
	padding: 0.86em 1.14em;
}

code {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
}
/* quotes around code */
code::before, code::after {
	content: "`";
}
code:where(pre code) {
	color: inherit;
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}
pre code::before, pre code::after {
	content: none;
}

table {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin: 2em 0;
	font-size: 0.875em;
	line-height: 1.71;
}
/* table head, or body row */
thead, tbody tr:not(:last-child) {
	border-bottom-width: 1px;
}
/* table head */
thead {
	border-bottom-color: var(--tw-prose-th-borders);
}
/* row in table */
tbody tr {
	border-bottom-color: var(--tw-prose-td-borders);
}
thead th, tbody td {
	padding: 0.57em;
}
/* header cell in table head */
thead th {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-top: 0;
}
/* normal cell inside table body */
tbody td {
	vertical-align: baseline;
}
/* media */
img, video, figure {
	margin: 2em 0;
}

/* list item */
li {
	margin: 0.5em 0;
}
/* list item in a list */
:where(ol, ul) > li {
	padding-left: 0.375em;
}

/* any list inside a top-level list */
:host > div > :where(ul, ol) :where(ul, ol) {
	margin: 0.75em 0;
}

/* paragraph */
p {
	margin: 1.25em 0;
}
:host > div > :where(ul, ol) > li p {
	margin: 0.75em 0;
}

/* 🟥 */
:host > div > :where(ul, ol) > li > *:first-child {
	margin-top: 1.25em !important;
}
/* 🟥 */
:host > div > :where(ul, ol) > li > *:last-child {
	margin-bottom: 1.25em !important;
}
/* 🟥 */
:where(hr, h2, h3, h4) + *,
:host > div > *:first-child {
	margin-top: 0 !important;
}
/* 🟥 */
*:first-child:where(thead th, tbody td) {
	padding-left: 0 !important;
}
/* 🟥 */
*:last-child:where(thead th, tbody td) {
	padding-right: 0 !important;
}
/* 🟥 */
:host > div > *:last-child {
	margin-bottom: 0 !important;
}
