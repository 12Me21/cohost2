/* 🟥 */
*, ::before, ::after {
	box-sizing: border-box;
	
	/* default is:
border: medium none currentColor;
*/
	border: 0 solid currentColor;
}

img, svg, video, canvas, audio, iframe, embed, object {
	display: block;
	vertical-align: middle;
}
img, video {
	max-width: 100%;
	height: auto;
}
/*
the default image sizes/spacing are WAYYY too big,
but we can't mess with it too much, otherwise it could break things.
so, we just target unstyled images, at the top level or directly inside
a paragraph
*/
:host > div > img:not([style]),
p > img:not([style]) {
	max-height: var(--embed-height);
	margin: 1em 0;
	border: var(--image-border);
}

:host > div {
	margin: var(--prose-margin, 1rem);
	margin-left: 0;
	margin-right: 0;
	
	border-width: var(--prose-margin, 1rem);
	border-style: none solid;
	border-color: transparent;
}
:host {
	contain: content;
	word-break: break-word;
	-webkit-text-size-adjust: 100%;
	-moz-tab-size: 4; tab-size: 4;
	color: #191919;
	/*max-width: 65ch;*/
	font:
		1rem / 1.75
		'Atkinson Hyperlegible', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'segoe ui', 'Roboto', 'helvetica neue', 'Arial', 'noto sans', 'sans-serif',
		'apple color emoji', 'segoe ui emoji', 'segoe ui symbol', 'noto color emoji';
}
/* <a> */
a {
	text-decoration: underline;
	font-weight: 500;
}
:where(.lead) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin: 1.2em 0;
}
/* bold */
:where(strong) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}
:where(ol) {
	padding-left: 1.625em;
}
ol { list-style-type: decimal; }
ol[type=A]  { list-style-type: upper-alpha; }
ol[type=a]  { list-style-type: lower-alpha; }
ol[type=As] { list-style-type: upper-alpha; }
ol[type=as] { list-style-type: lower-alpha; }
ol[type=I]  { list-style-type: upper-roman; }
ol[type=i]  { list-style-type: lower-roman; }
ol[type=Is] { list-style-type: upper-roman; }
ol[type=is] { list-style-type: lower-roman; }
ol[type=1]  { list-style-type: decimal; }
ul { list-style-type: disc; }

:where(ul) {
	padding-left: 1.625em;
}
:where(ol > li)::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}
:where(ul > li)::marker {
	color: var(--tw-prose-bullets);
}
:where(hr) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin: 1em 0;
}
:where(blockquote) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left: 0.25rem solid var(--tw-prose-quote-borders);
	quotes: "“" "”" "‘" "’";
	margin: 1.6em 0;
	padding-left: 1em
}
:where(blockquote p:first-of-type)::before {
	content: open-quote;
}
:where(blockquote p:last-of-type)::after {
	content: close-quote;
}
:where(h1) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin: 0 unset 0.89em;
	line-height: 1.11;
}
:where(h1 strong) {
	font-weight: 900;
}
:where(h2) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin: 2em unset 1em;
	line-height: 1.33;
}
:where(h2 strong) {
	font-weight: 800;
}
:where(h3) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin: 1.6em unset 0.6em;
	line-height: 1.6;
}
:where(h3 strong) {
	font-weight: 700;
}
:where(h4) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin: 1.5em unset 0.5em;
	line-height: 1.5;
}
:where(h4 strong) {
	font-weight: 700;
}
/* 🟥 */
:where(figure > *) {
	margin: 0;
}
figcaption {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.43; /* 10/7 */
	margin-top: 0.86em; /* 6/7 */
}

pre {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: .875em;
	line-height: 1.71;
	margin: 1.71em;
	border-radius: 0.375rem;
	padding: 0.86em 1.14em;
}

code {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
}
/* quotes around code */
code::before, code::after {
	content: "`";
}

table {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin: 2em 0;
	font-size: 0.875em;
	line-height: 1.71;
}
/* table head, or body row */
thead, tbody tr:not(:last-child) {
	border-bottom-width: 1px;
}
/* table head */
thead {
	border-bottom-color: var(--tw-prose-th-borders);
}
/* row in table */
tbody tr {
	border-bottom-color: var(--tw-prose-td-borders);
}
thead th, tbody td {
	padding: 0.57em;
}
/* header cell in table head */
thead th {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-top: 0;
}
/* normal cell inside table body */
tbody td {
	vertical-align: baseline;
}
/* media */
img, video, figure {
	margin: 2em 0;
}

/* list item */
li {
	margin: 0.5em 0;
}
/* list item in a list */
:where(ol, ul) > li {
	padding-left: 0.375em;
}

/* any list inside a top-level list */
:host > div > :where(ul, ol) :where(ul, ol) {
	margin: 0.75em 0;
}

/* paragraph */
p {
	margin: 1.25em 0;
}
:host > div > :where(ul, ol) > li p {
	margin: 0.75em 0;
}

/* 🟥 */
:host > div > :where(ul, ol) > li > *:first-child {
	margin-top: 1.25em !important;
}
/* 🟥 */
:host > div > :where(ul, ol) > li > *:last-child {
	margin-bottom: 1.25em !important;
}
/* 🟥 */
:where(hr, h2, h3, h4) + *,
:host > div > :first-child {
	margin-top: 0 !important;
}
/* 🟥 */
*:first-child:where(thead th, tbody td) {
	padding-left: 0 !important;
}
/* 🟥 */
*:last-child:where(thead th, tbody td) {
	padding-right: 0 !important;
}
/* 🟥 */
:host > div > :last-child {
	margin-bottom: 0 !important;
}
